stages:
  - build
  - backend_test
  - code_quality
  - publish
  - deploy

variables:
  BACKEND_ARTIFACT: backend/target/backend-0.0.1-SNAPSHOT.jar
  FRONTEND_ARTIFACT: frontend/dist/

build-backend:
  stage: build
  image: maven:latest
  tags:
    - rentalsphere
  script:
    - cd backend
    - echo "Building Backend Application..."
    - ./mvnw clean package
    - echo "Backend Build Complete"
  artifacts:
    paths:
      - backend/target

build-frontend:
  stage: build
  image: node:latest
  tags:
    - rentalsphere
  script:
    - echo "Building Frontend Application..."
    - cd frontend
    - npm install
    - npm run build
    - ls -a
    - cd dist
    - ls -a
    - echo "Frontend Build Complete"

  artifacts:
    paths:
      # - $FRONTEND_ARTIFACT
      - frontend/dist

test:
  image: maven:latest
  stage: backend_test
  tags:
    - rentalsphere
  script:
    - echo "Running tests..."
    - cd backend
    - ./mvnw test
    - echo "Backend Tests Complete"

quality:
  image: openjdk:17
  stage: code_quality
  tags:
    - rentalsphere
  script:
    - cd backend
    - rm -rf code_smells
    - mkdir code_smells
    - java -jar DesigniteJava.jar -i . -o code_smells
  artifacts:
    paths:
      - backend/code_smells/*.csv
    expire_in: 1 week

publish:
  image: docker:latest
  stage: publish
  tags:
    - rentalsphere
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: "tcp://docker:2375"
  services:
    - docker:dind
  script:
    - pwd
    - echo $SERVER_IP
    - docker --version
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PWD docker.io

    - cd backend/
    - docker build -t docker.io/$DOCKER_HUB_USERNAME/rentalsphere-backend:$CI_COMMIT_SHORT_SHA .
    - docker push docker.io/$DOCKER_HUB_USERNAME/rentalsphere-backend:$CI_COMMIT_SHORT_SHA

    - cd ..

    - cd frontend/
    - docker build -t docker.io/$DOCKER_HUB_USERNAME/rentalsphere-frontend:$CI_COMMIT_SHORT_SHA .
    - docker push docker.io/$DOCKER_HUB_USERNAME/rentalsphere-frontend:$CI_COMMIT_SHORT_SHA
    - cd ..
    - ls -a

  only:
    - development

deploy-backend:
  image: alpine:latest
  stage: deploy
  tags:
    - rentalsphere
  script:
    - cd backend/
    - echo "Deploying Backend..."
    - chmod og-rwx $ID_RSA
    - apk update && apk add openssh-client sshpass
    - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PWD docker.io"
    - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull docker.io/$DOCKER_HUB_USERNAME/rentalsphere-backend:$CI_COMMIT_SHORT_SHA"
    - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f rentalsphere-backend || true"
    - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p 8080:8080 --name rentalsphere-backend docker.io/$DOCKER_HUB_USERNAME/rentalsphere-backend:$CI_COMMIT_SHORT_SHA"
    - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker images -a"
    - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container ls -a"

  # environment:
  #   name: production
  #   url: http://172.17.3.125:8080
  only:
    - development

deploy-frontend:
  image: alpine:latest
  stage: deploy
  tags:
    - rentalsphere
  script:
    # - cd frontend/
    # - echo "Deploying Frontend..."
    # - chmod og-rwx $ID_RSA
    # - apk update && apk add openssh-client sshpass
    # - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PWD docker.io"
    # - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull docker.io/$DOCKER_HUB_USERNAME/rentalsphere-frontend:$CI_COMMIT_SHORT_SHA"
    # - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f rentalsphere-frontend || true"
    # - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p 5173:5173 --name rentalsphere-frontend docker.io/$DOCKER_HUB_USERNAME/rentalsphere-frontend:$CI_COMMIT_SHORT_SHA"
    # - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker images -a"
    # - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container ls -a"

    - echo "Deploying application..."
    - chmod og-rwx $ID_RSA
    - echo "Frontend Build Files Transfer in progress!"
    - apk update && apk add openssh-client sshpass
    - pwd
    - ls -a
    # - cd ~
    - cd frontend || true
    - ls -a
    - cd dist || true
    - ls -a
    - cd ..
    - cd ..
    - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "rm -r /var/www/html/*" || true
    - sshpass -p "dalw24" scp -o StrictHostKeyChecking=no -r -v frontend/dist/* ${SERVER_USER}@${SERVER_IP}:/var/www/html
    - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "cd /var/www/html/"
    - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "ls -a"
    - echo "Frontend Deplyoment Complete!!"

  # environment:
  #   name: production
  #   url: http://172.17.3.125:5173

  only:
    - development
